# Sensor Testing Directory

Este directorio contiene las pruebas unitarias de los diferentes sensores y módulos utilizados en el proyecto. Cada sensor y módulo tiene sus respectivos archivos `.cpp` y `.h` que definen las pruebas y el comportamiento esperado. Las pruebas están diseñadas para asegurar que cada componente funcione correctamente dentro del sistema IoT y que sus datos puedan ser confiables en el contexto de la monitorización ambiental.

## Sensores y Módulos Implementados

### 1. AHT25 (Sensor de Temperatura y Humedad)
- **Archivos**: `AHT25Sensor.cpp`, `AHT25Sensor.h`
- **Descripción**: Este sensor se utiliza para medir la temperatura y la humedad en tiempo real. Las pruebas aseguran que las lecturas de temperatura y humedad estén dentro de los márgenes de precisión especificados por el fabricante.

### 2. BMP280 (Sensor de Presión Atmosférica y Temperatura)
- **Archivos**: `BMP280Sensor.cpp`, `BMP280Sensor.h`
- **Descripción**: El sensor BMP280 mide la presión atmosférica y la temperatura. Las pruebas verifican la estabilidad de las lecturas en diversas condiciones de presión y temperatura.

### 3. MQ135 (Sensor de Calidad de Aire)
- **Archivos**: `MQ135Sensor.cpp`, `MQ135Sensor.h`
- **Descripción**: Este sensor detecta varios gases presentes en el aire, como el dióxido de carbono (CO2) y otros gases tóxicos. Las pruebas validan la sensibilidad del sensor a estos gases y su capacidad para identificar niveles peligrosos en el aire.

### 4. ML8511 (Sensor de Radiación UV)
- **Archivos**: `ML8511Sensor.cpp`, `ML8511Sensor.h`
- **Descripción**: Este sensor mide la radiación ultravioleta (UV). Las pruebas aseguran la precisión de las lecturas de UV y verifican que el sensor responde adecuadamente a diferentes niveles de radiación solar.

### 5. WS2812 (LED RGB Addressable)
- **Archivos**: `WS2812.cpp`, `WS2812.h`
- **Descripción**: Este módulo controla un anillo de LEDs WS2812 RGB direccionables. Las pruebas verifican la correcta configuración de los colores y la secuencia de cambio de color, asegurando que todos los LEDs respondan adecuadamente.

### 6. Pantalla LCD 16x2 (Display LCD)
- **Archivos**: `LCDDisplay.cpp`, `LCDDisplay.h`
- **Descripción**: La pantalla LCD 16x2 se utiliza para mostrar información relevante del sistema. Las pruebas garantizan la correcta visualización de los caracteres y la actualización de los datos en la pantalla.

### 7. BH1750-GY302 (sensor de Luz)
- **Archivos**: `BH1750-GY302.cpp`, `BH1750-GY302.h`
- **Descripción**: mide la intensidad de la luz en unidades de lux. Utiliza un protocolo de comunicación I²C para transmitir los datos al microcontrolador, lo que permite lecturas precisas y rápidas de la luz sin necesidad de calibración adicional.

## Próximos a implementar

- **GY-302** (Sensor de Luz)
- **Touch** (3 Touchs ESP32)

## Información Adicional

Este proyecto utiliza el sistema de **Unit Testing** de PlatformIO para verificar la funcionalidad de cada sensor y módulo de manera individual. Las pruebas ayudan a identificar problemas en las primeras etapas del ciclo de desarrollo y garantizan la integridad del código.
